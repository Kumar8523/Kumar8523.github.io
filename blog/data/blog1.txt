# Getting Started with React Hooks

React Hooks, introduced in React 16.8, have revolutionized how we write React components. They allow you to use state and other React features without writing a class.

## Why Use Hooks?

1. **Simpler Components**: Hooks let you split one component into smaller functions based on what pieces are related.
2. **Reuse Stateful Logic**: Hooks allow you to reuse stateful logic without changing your component hierarchy.
3. **No More Classes**: You can use React features without classes, which can be confusing for both humans and machines.

## Basic Hooks

### useState

The `useState` hook is the most basic hook that allows you to add React state to functional components.

```jsx
import React, { useState } from 'react';

function Counter() {
  const [count, setCount] = useState(0);

  return (
    <div>
      <p>You clicked {count} times</p>
      <button onClick={() => setCount(count + 1)}>
        Click me
      </button>
    </div>
  );
}
```
